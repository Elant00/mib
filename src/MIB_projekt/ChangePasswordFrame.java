/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MIB_projekt;

import javax.swing.JLabel;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;



import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author antti
 */
public class ChangePasswordFrame extends javax.swing.JFrame {

    
    private static InfDB idb;
    /**
     * Creates new form ChangePasswordFrame
     */
    public ChangePasswordFrame(InfDB iidb) {
        initComponents();
        idb = iidb;
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        oldPassword = new javax.swing.JPasswordField();
        newPassword = new javax.swing.JPasswordField();
        UserNameCP = new javax.swing.JTextField();
        UsernameChangeP = new javax.swing.JLabel();
        UsernameChangeP1 = new javax.swing.JLabel();
        UsernameChangeP2 = new javax.swing.JLabel();
        confirmChangesButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        oldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldPasswordActionPerformed(evt);
            }
        });

        UsernameChangeP.setText("Username:");
        UsernameChangeP.setMaximumSize(new java.awt.Dimension(100, 25));
        UsernameChangeP.setMinimumSize(new java.awt.Dimension(100, 25));

        UsernameChangeP1.setText("New password:");
        UsernameChangeP1.setMaximumSize(new java.awt.Dimension(100, 25));
        UsernameChangeP1.setMinimumSize(new java.awt.Dimension(100, 25));

        UsernameChangeP2.setText("Old password:");
        UsernameChangeP2.setMaximumSize(new java.awt.Dimension(100, 25));
        UsernameChangeP2.setMinimumSize(new java.awt.Dimension(100, 25));

        confirmChangesButton.setText("Confirm changes");
        confirmChangesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmChangesButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Agent", "Alien" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UsernameChangeP, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UsernameChangeP2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UsernameChangeP1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(oldPassword)
                            .addComponent(UserNameCP)
                            .addComponent(newPassword))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                        .addComponent(confirmChangesButton)
                        .addGap(30, 30, 30))))
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserNameCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsernameChangeP, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsernameChangeP2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsernameChangeP1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmChangesButton)
                    .addComponent(cancelButton))
                .addGap(36, 36, 36))
        );

        UsernameChangeP.getAccessibleContext().setAccessibleName("UsernameChangeP");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void oldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oldPasswordActionPerformed

    private void confirmChangesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmChangesButtonActionPerformed
    String selectedType = jComboBox1.getSelectedItem().toString();
    String email = UserNameCP.getText();
    char[] oldPasswordChar = oldPassword.getPassword();
    String oldPasswordString = new String(oldPasswordChar);    
    char[] ändraLösen = newPassword.getPassword();
    String nyttLösen = new String(ändraLösen);
    if(nyttLösen.length() > 6){
        JOptionPane.showMessageDialog(this, "Your new password is too long, make it 6 charachters or shorter! ");
    }
    
    if(selectedType.equals("Agent")){
    String frågaTillSql = "Select Losenord from agent where Epost = '" + email + "'";
   
       try {
        String svarFrånSql = idb.fetchSingle(frågaTillSql);
        
        if((!oldPasswordString.equals(svarFrånSql)) && nyttLösen.length()<7) {
            JOptionPane.showMessageDialog(null, "Felaktig e-post eller lösenord. Försök igen!");
        }

        // Kontrollera om det gamla lösenordet matchar med e-posten
        if (oldPasswordString.equals(svarFrånSql)){
            // Om lösenorden matchar, ändra lösenordet
            String updateTillSql = "UPDATE agent SET Losenord = '" + nyttLösen + "' WHERE Epost = '" + email + "'";
            idb.update(updateTillSql);
            JOptionPane.showMessageDialog(null, "Lösenordet har ändrats!");
        } 
    } catch (InfException ex) {
        Logger.getLogger(ChangePasswordFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
    }   
    
    else{
    String frågaTillSql2 = "Select Losenord from Alien where Epost = '" + email + "'";
    
       try {
        String svarFrånSql2 = idb.fetchSingle(frågaTillSql2);
        
        if((!oldPasswordString.equals(svarFrånSql2)) && nyttLösen.length()<7){
            JOptionPane.showMessageDialog(null, "Felaktig e-post eller lösenord. Försök igen!");
    }
        // Kontrollera om det gamla lösenordet matchar med e-posten
        if(oldPasswordString.equals(svarFrånSql2)){
            String updateTillSql2 = "UPDATE alien SET Losenord = '" + nyttLösen + "' WHERE Epost = '" + email + "'";
            idb.update(updateTillSql2);
            JOptionPane.showMessageDialog(null, "Lösenordet har ändrats!");
        }
    } 
       catch (InfException ex) {
        Logger.getLogger(ChangePasswordFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmChangesButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed

    // Create a new ActionListener for the Cancel button
    cancelButton.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            // Get the JFrame window for the current event
            JFrame frame = (JFrame) SwingUtilities.getWindowAncestor((JButton) e.getSource());
            // Close or dispose of the window
            frame.dispose();
        }
    });
   
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            @Override
            public void run() {
                new ChangePasswordFrame(idb).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField UserNameCP;
    private javax.swing.JLabel UsernameChangeP;
    private javax.swing.JLabel UsernameChangeP1;
    private javax.swing.JLabel UsernameChangeP2;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton confirmChangesButton;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPasswordField newPassword;
    private javax.swing.JPasswordField oldPassword;
    // End of variables declaration//GEN-END:variables
}
