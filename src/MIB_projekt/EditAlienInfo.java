/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MIB_projekt;

import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.sql.PreparedStatement;
import java.sql.Connection;

/**
 *
 * @author emilrydberg
 */
public class EditAlienInfo extends javax.swing.JFrame {

    
    private static InfDB idb;
    // Create a connection to the database

    /**
     * Creates new form LoginForm
     * @param iidb
     */
    public EditAlienInfo (InfDB iidb) {
        initComponents();
        idb = iidb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        alienIDText = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Edit alien info");

        jButton1.setText("Edit name");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit phone number");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter AlienID:");

        jButton3.setText("Edit location");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Edit the responsible Agent");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Edit rase");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alienIDText))
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(128, 128, 128))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(BackButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(alienIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(15, 15, 15)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addContainerGap(52, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BackButton)
                        .addGap(14, 14, 14))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        this.setVisible(false);
        AgentActionPage actionPage = new AgentActionPage(idb);
        actionPage.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String alienId = alienIDText.getText();
        
        Validation validator = new Validation();

        // Kontrollera om agent-ID-rutan är tom
        if (validator.isEmpty(alienId)) {
            JOptionPane.showMessageDialog(this, "Alien-ID-rutan är tom", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Visa en dialogruta för att ange det nya namnet
        String newName = JOptionPane.showInputDialog(this, "Ange det nya namnet för alien:", "Ändra namn", JOptionPane.PLAIN_MESSAGE);

        try {
            // Uppdatera alienens namn i databasen
            String query = "UPDATE Alien SET Namn = '" + newName + "' WHERE Alien_ID = '" + alienId + "'";
            idb.update(query);

            // Visa en bekräftelse att namnet har ändrats
            JOptionPane.showMessageDialog(this, "Aliens namn har ändrats till: " + newName, "Namnändring", JOptionPane.INFORMATION_MESSAGE);

        } catch (InfException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            // Visa en felmeddelande om uppdateringen misslyckades
            JOptionPane.showMessageDialog(this, "Fel vid uppdatering av namn", "Fel", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String alienId = alienIDText.getText();

        Validation validator = new Validation();

        // Kontrollera om agent-ID-rutan är tom
        if (validator.isEmpty(alienId)) {
            JOptionPane.showMessageDialog(this, "Alien-ID-rutan är tom", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Visa en dialogruta för att ange det nya namnet
        String newNumber = JOptionPane.showInputDialog(this, "Ange det nya telefonnummret för alien:", "Ändra telefonnummer", JOptionPane.PLAIN_MESSAGE);

        try {
            // Uppdatera alienens namn i databasen
            String query = "UPDATE Alien SET Telefon = '" + newNumber + "' WHERE Alien_ID = '" + alienId + "'";
            idb.update(query);

            // Visa en bekräftelse att namnet har ändrats
            JOptionPane.showMessageDialog(this, "Aliens nummer har ändrats till: " + newNumber, "Namnändring", JOptionPane.INFORMATION_MESSAGE);

        } catch (InfException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            // Visa en felmeddelande om uppdateringen misslyckades
            JOptionPane.showMessageDialog(this, "Fel vid uppdatering av nummer", "Fel", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      String alienId = alienIDText.getText();
      
      Validation validator = new Validation();

        // Kontrollera om agent-ID-rutan är tom
        if (validator.isEmpty(alienId)) {
            JOptionPane.showMessageDialog(this, "Alien-ID-rutan är tom", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Visa en dialogruta för att ange det nya namnet
        String newArea = JOptionPane.showInputDialog(this, "Ange det nya plats-ID för alien:", "Ändra plats-ID", JOptionPane.PLAIN_MESSAGE);

        try {
            // Uppdatera alienens namn i databasen
            String query = "UPDATE Alien SET Plats = '" + newArea + "' WHERE Alien_ID = '" + alienId + "'";
            idb.update(query);

            // Visa en bekräftelse att namnet har ändrats
            JOptionPane.showMessageDialog(this, "Aliens plats har ändrats till: " + newArea, "Plats ändring", JOptionPane.INFORMATION_MESSAGE);

        } catch (InfException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            // Visa en felmeddelande om uppdateringen misslyckades
            JOptionPane.showMessageDialog(this, "Fel vid uppdatering av plats", "Fel", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       String alienId = alienIDText.getText();

        Validation validator = new Validation();

        // Kontrollera om agent-ID-rutan är tom
        if (validator.isEmpty(alienId)) {
            JOptionPane.showMessageDialog(this, "Alien-ID-rutan är tom", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Visa en dialogruta för att ange det nya namnet
        String newAgent = JOptionPane.showInputDialog(this, "Ange det nya Agent-ID som är ansvarig för alien:", "Ändra Agent-ID", JOptionPane.PLAIN_MESSAGE);

        try {
            // Uppdatera alienens namn i databasen
            String query = "UPDATE Alien SET Ansvarig_Agent = '" + newAgent + "' WHERE Alien_ID = '" + alienId + "'";
            idb.update(query);

            // Visa en bekräftelse att namnet har ändrats
            JOptionPane.showMessageDialog(this, "Alien har fått en ny agent med ID: " + newAgent, "Agent ändring", JOptionPane.INFORMATION_MESSAGE);

        } catch (InfException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            // Visa en felmeddelande om uppdateringen misslyckades
            JOptionPane.showMessageDialog(this, "Fel vid uppdatering av ansvarig agent", "Fel", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       String alienId = alienIDText.getText();

        Validation validator = new Validation();

        // Kontrollera om agent-ID-rutan är tom
        if (validator.isEmpty(alienId)) {
            JOptionPane.showMessageDialog(this, "Alien-ID-rutan är tom", "Fel", JOptionPane.ERROR_MESSAGE);
            return;
        }
    
        
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditAlienInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditAlienInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditAlienInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditAlienInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditAlienInfo(idb).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JTextField alienIDText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
